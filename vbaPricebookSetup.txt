'' VBA Pricebook Scripts

'' FILL IN THE CATEGORY FIELD
Function displayCategory(dr, dc, tr, tc)
  '' set location and value of category field in the template tab
  Set catLoc = Worksheets("template").Cells(tr + 1, tc + 1)
  Set catVal = Worksheets("data").Cells(dr, dc + 1)
  
  '' set text color and cell color
  catLoc.Font.Color = RGB(255, 255, 255)
  catLoc.Interior.Color = RGB(0, 32, 96)
  
  '' set category name
  catLoc.Value = catVal
  
  '' move location of template row to start of field-name row
  tr = tr + 3
  
  '' TESTING
  '' myString = CStr(dr) + CStr(dc) + CStr(tr) + CStr(tc) + catVal
  '' MsgBox ("displayCategory()" + myString)
  MsgBox ("end displayCategory")
  '' Worksheets("template").Cells(tr, tc).Value = "Start"

End Function

'' FILL IN THE SUBCATEGORY FIELD
Sub displaySubCategory()
  '' set text color : cells(i,j).Font.Color=RGB(x,y,x)
  '' set field color : cells(i,j).Interior.Color=RGB(x,y,x)
  
  '' display message for testing purposes
  MsgBox ("end displaySubCategory")
  
End Sub

'' FILL IN THE FIELD NAMES
Sub displayFieldNames()
  '' set text color
  '' set field color
  
  '' display message for testing purposes
  MsgBox ("end displayFieldNames")

End Sub

'' FILL IN THE NEXT RECORD OF DATA
Sub populateRecord()
  
  
End Sub

'' COPY AND PASTE FIELD-NAME ROW FROM TOP OF TEMPLATE TAB
Sub cnpFieldNames()
  Range("A11", Range("A11").End(xlToRight)).Copy Worksheets("template").Range("A12")

  '' msg box test
  MsgBox ("end cnpFieldNames")
  
End Sub

'' TESTING
Sub testMsg(dr, dc, tr, tc)
  Dim testString As String
  testString = CStr(tr) + " " + CStr(tc) + " " + CStr(dr) + " " + CStr(dc) + " "
  MsgBox ("end testString: " + testString)

End Sub
Function isEndOfItem(itemSuffix, dr, dc)
  '' IF isEndOfItem itemSuffix dRow, dCol
  '' nuItemSuffix =
  '' return True
  '' Else return False
  
End Function

Function getSuffix(r, c) As String
  Set dataPtr = Worksheets("data").Cells(r, c)
  Dim trimVal As Long
  Dim suffix As String
  trimVal = InStr(1, dataPtr, "-")
  getSuffix = Right(dataPtr.Value, Len(dataPtr.Value - trimVal))
  
End Function


'' POPULATE THE TEMPLATE WITH DATA FROM THE PRICEBOOK
Sub populateTemplate()
  '' activate the template tab
  Worksheets("template").Activate
  
  '' declare variables ------------------------------------
  '' initialize vars for row and col on template tab
  Dim tRow As Long
  Dim tCol As Long
  tRow = 8
  tCol = 1
  
  '' initialize vars for row and col on data tab
  Dim dRow As Long
  Dim dCol As Long
  dRow = 2
  dCol = 1
  
  '' set active cell location on template tab and data tab
  Set dataPtr = Worksheets("data").Cells(dRow, dCol)
  '' Set tempPtr = Worksheets("template").Cells(tRow, tCol)
  
  '' capture Item suffix and prefix from data tab
  '' the prefix will be used to determine when to call displayCategory
  Dim trimVal As Long
  Dim itemSufix As String           '' ie, SLO-01 --> SLO
  Dim itemPrefix As String          '' ie, SLO-01 --> 01
  trimVal = InStr(1, dataPtr, "-")  '' get position of hyphen within the Item string
  itemSuffix = Right(dataPtr.Value, Len(dataPtr.Value) - trimVal)
  itemPrefix = Left(dataPtr.Value, trimVal - 1)
  
  '' end declare variables --------------------------------
  
  '' while dataPtr != ""
  '' fill in the category field IF NEEDED
    displayCategory dRow, dCol, tRow, tCol

    
    '' TESTING
    testMsg dRow, dCol, tRow, tCol
    
    '' fill in the subCategory field if needed
  
    '' if tRow > 11 on template tab
    '' and dRow has reached the end of an Item grouping on data tab
    '' then create a new row of field names in template tab
    '' nuDataRow = isEndOfItem itemSuffix dRow, dCol
    '' If tRow > 11 And nuDataRow == True Then
    cnpFieldNames
    
    '' TESTING
    testMsg dRow, dCol, tRow, tCol
    
    itemSuffix = getSuffix dRow, dCol
    Dim msg As String
    msg = dataPtr.Value
    MsgBox (dataPtr)
  
    '' populate Item field
    '' dataPtr.Value
  
    '' test for end of record
    ''col = col + 1
    '' if col is null, col = 1, row = row + 1
    ''dataPtr = dataPtr.Cells(row, col)
    
    '' end while
    
End Sub
Sub doSomethingWithArray()
  '' lu array : https://www.automateexcel.com/vba/array-variables/
End Sub

