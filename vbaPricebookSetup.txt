'' VBA Pricebook Setup

'' EXAMPLE
Sub MySum()
  ActiveCell.Value = WorksheetFunction.Sum(Worksheets("Sales").Range("B1:B25"))
End Sub


'' EXAMPLE
Sub FillColC()
  For Counter = 1 To 25
    Set curCell = Worksheets("test").Cells(Counter, 3)
    curCell.Value = Worksheets("Sales").Cells(Counter, 2)
    Next Counter
End Sub

'' EXAMPLE
Sub Item()
  For Counter = 1 To 25
    Set curCell = Worksheets("template").Cells(Counter + 11, 1)
    curCell.Value = Worksheets("Sales").Cells(Counter, 2)
    Next Counter
End Sub

'' SET COLORS FOR TEXT AND CELL
Sub setColorScheme()
  '' Worksheets("template").Range("A1").Interior.ColorIndex = 5
  '' rem blue = rgb(0, 32, 96)
End Sub

'' FILL IN THE CATEGORY FIELD
Function displayCategory(dr, dc, tr, tc)
  '' set location and value of category field in the template tab
  Set catLoc = Worksheets("template").Cells(tr + 1, tc + 1)
  Set catVal = Worksheets("data").Cells(dr, dc + 1)
  
  '' set text color and cell color
  catLoc.Font.Color = RGB(255, 255, 255)
  catLoc.Interior.Color = RGB(0, 32, 96)
  
  '' set category name
  catLoc.Value = catVal
  
  '' move location of template row to start of field-name row
  tr = tr + 3
  
  '' TESTING
  '' myString = CStr(dr) + CStr(dc) + CStr(tr) + CStr(tc) + catVal
  '' MsgBox ("displayCategory()" + myString)
  MsgBox ("end displayCategory")
  '' Worksheets("template").Cells(tr, tc).Value = "Start"

End Function

'' FILL IN THE SUBCATEGORY FIELD
Sub displaySubCategory()
  '' set text color : cells(i,j).Font.Color=RGB(x,y,x)
  '' set field color : cells(i,j).Interior.Color=RGB(x,y,x)
  
  '' display message for testing purposes
  MsgBox ("end displaySubCategory")
  
End Sub

'' FILL IN THE FIELD NAMES
Sub displayFieldNames()
  '' set text color
  '' set field color
  
  '' display message for testing purposes
  MsgBox ("end displayFieldNames")

End Sub

'' FILL IN THE NEXT RECORD OF DATA
Sub populateRecord()
  
  
End Sub
Sub test(dr, dc, tr, tc)
  Dim myString As String
  myString = CStr(dr) + CStr(dc) + CStr(tr) + CStr(tc)
  '' MsgBox (myString)
  MsgBox ("end test")

End Sub

'' POPULATE THE TEMPLATE WITH DATA FROM THE PRICEBOOK
Sub populateTemplate()

  '' declare variables ------------------------------
  '' vars for current row and col on template tab
  Dim tRow As Long
  Dim tCol As Long
  tRow = 8
  tCol = 1
  
  '' vars for current row and col on data tab
  Dim dRow As Long
  Dim dCol As Long
  dRow = 2
  dCol = 1
  
  '' create iterative pointers on template tab and data tab
  Set dataPtr = Worksheets("data").Cells(dRow, dCol)
  Set tempPtr = Worksheets("template").Cells(tRow, tCol)
  
  '' capture Item suffix and prefix from data tab
  '' the prefix will be used to determine when to call displayCategory
  Dim trimVal As Long
  Dim itemSufix As Long             '' ie, SLO-01 --> SLO
  Dim itemPrefix As String          '' ie, SLO-01 --> 01
  trimVal = InStr(1, dataPtr, "-")  '' get position of hyphen within the Item string
  itemSuffix = Right(dataPtr.Value, Len(dataPtr.Value) - trimVal)
  itemPrefix = Left(dataPtr.Value, trimVal - 1)
  

  '' end declare variables --------------------------
 
  '' while dataPtr != ""
    '' fill in the category field IF NEEDED
    '' IF TEST THEN
       displayCategory dRow, dCol, tRow, tCol
    
      '' TESTING
      '' test dRow, dCol, tRow, tCol
      testString = CStr(tRow) + CStr(tCol) + CStr(dRow) + CStr(dCol)
      MsgBox ("Test String: " + testString)
    
    '' fill in the subCategory field if needed
  
    '' populate Item field
    ''tempPtr.Value = dataPtr
    '' dataPtr.Value
  
    '' test for end of record
    ''col = col + 1
    '' if col is null, col = 1, row = row + 1
    ''dataPtr = dataPtr.Cells(row, col)
    
    '' end while
    
End Sub
Sub doSomethingWithArray()
  '' lu array : https://www.automateexcel.com/vba/array-variables/
End Sub

